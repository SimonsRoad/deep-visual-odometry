''' This is a script to get training data from a model folder
    and plot it using matplotlib.
 Can be imported from a jupyter notebook for easy path plotting.'''
import os
import matplotlib as mpl
from datatool import get_training_data

FILE_PATH = os.path.dirname(os.path.abspath(__file__))

def plot_path(model_name='', model_type='global', run=-1, paths=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]):
    '''
    model_name: the folder to look for model files in

    model_type: 'global', 'rel', or 'quat'

    run: plots first model with this number in its name.
    If no run given, plots graphs for all model files in model folder.

    paths: Which paths should be plotted
    '''
    #check that model (folder) name given
    if not model_name:
        raise ValueError('model folder not specified, must provide model_name arg')

    #Get file paths
    model_root = os.path.join(FILE_PATH, '..', '..', 'models', model_name)

    model_files = os.listdir(model_root)

    for i, mfile in enumerate(model_files):
        if mfile[-3:] == '.h5' and str(run) in mfile:
            model_files[i] = model_root + mfile
        else:
            model_files.remove(mfile)

    if len(model_files) == 0:
        raise Exception('no models (.h5) found in directory "' + model_name + '"')

    # Plot model performance on paths
    if model_type == 'global':
        pass
        #plot_global(model_paths)
    elif model_type == 'rel':
        pass
    elif model_type == 'quat':
        pass
        #plot_quat()
    else:
        raise ValueError('invalid model_type')

def plot_quat(model_files=[]):
    '''
    plots paths generated by given models
    '''
    if not len(model_files):
        raise ValueError('no model files given to evaluate')
